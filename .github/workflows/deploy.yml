name: Update Service

on: 
  workflow_dispatch:
    inputs:
      environment:
        description: The environment to deploy to
        type: environment
        default: dev
      image:
        description: The full image
        type: string
        required: true
  workflow_call:
    inputs:
      environment:
        description: The environment to deploy to
        required: true
        type: string
      image:
        description: The full image
        required: true
        type: string
    secrets:
      DUPLO_TOKEN:
        description: The Duplo API token
        required: true

jobs:
  update_service:
    name: Update Service
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment }}
    env:
      DUPLO_TOKEN: ${{ secrets.DUPLO_TOKEN }}
      DUPLO_HOST: ${{ vars.DUPLO_HOST }}
      DUPLO_TENANT: example
    steps: 
    - name: Duplo Setup
      id: duplo_setup
      uses: duplocloud/actions@main
      continue-on-error: true

    - name: Update Service
      id: update_service
      run: |
        echo "Updating service..."
        duploctl service update_image example ${{ inputs.image }} --wait
      continue-on-error: true

    - name: Notify on Failure
      if: ${{ steps.duplo_setup.outcome == 'failure' || steps.update_service.outcome == 'failure' }}
      run: |
        # Capture the output from the failed steps
        PIPELINE_OUTPUT=$(cat <<EOF
        Duplo Setup Step Output: ${{ steps.duplo_setup.outputs.stdout || 'No output' }}
        Duplo Setup Step Error: ${{ steps.duplo_setup.outputs.stderr || 'No error' }}
        
        Update Service Step Output: ${{ steps.update_service.outputs.stdout || 'No output' }}
        Update Service Step Error: ${{ steps.update_service.outputs.stderr || 'No error' }}
        EOF
        )
        
        # Send notification to Duplo service
        curl "${{ env.DUPLO_HOST }}/proxy/ai-studio/v1/aiservicedesk/tickets/8be0e053-72cc-4cdc-916d-d7328927156c" \
          -H 'accept: application/json, text/plain, */*' \
          -H 'accept-language: en-US,en;q=0.9' \
          -H "authorization: Bearer ${{ env.DUPLO_TOKEN }}" \
          -H 'cache-control: no-cache' \
          -H 'content-type: application/json; charset=UTF-8' \
          -H "origin: ${{ env.DUPLO_HOST }}" \
          -H 'pragma: no-cache' \
          -H 'priority: u=1, i' \
          -H 'sec-ch-ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"' \
          -H 'sec-ch-ua-mobile: ?0' \
          -H 'sec-ch-ua-platform: "macOS"' \
          -H 'sec-fetch-dest: empty' \
          -H 'sec-fetch-mode: cors' \
          -H 'sec-fetch-site: same-origin' \
          -H 'user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36' \
          --data-raw "{\"title\":\"You are running in the context of a pipeline.  a phase of the pipeline has failed and the output is below.  I want you take take this output and give me a summary of the issue and suggest a kubectl command to help troubleshoot the issue\\n\\n\n\nBELOW IS THE OUTPUT FROM THE PIPELINE:\n\n$PIPELINE_OUTPUT\",\"assignee\":{\"agentName\":\"k8s\",\"instanceId\":\"k8s\",\"agentHostTenantId\":\"ea73f43c-dda3-4fb5-998d-54f262238225\"}}"


    # - name: Update Service
    #   uses: duplocloud/actions/update-service@main
    #   with:
    #     service: demo
    #     image: ${{ inputs.image }}
